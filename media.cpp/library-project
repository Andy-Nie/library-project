// Member_functions definitions for class Media "implementation"
#include <iostream>
#include <string>
#include "Media.h"  // // include definition of class Media
#include "student.h"  // include definition of class Student
#include "Date.h"   // include definition of class Date
using namespace std;

Media::Media( )
	: name(" "),
	ISBN(" "), 
	NoOfCopies(2),
	CopiesAvailable(2)
{
                       }// end Media constructor

Media::Media(string n, string c)
	: name( n ),
	ISBN( c ),
	NoOfCopies(2),
	CopiesAvailable(2)

{                        }// end Media constructor

void Media::Borrow(Student &s, Date &d)
{
	if( CopiesAvailable != 0 )
	{
	s.Increment();
	CopiesAvailable--;
	Borrower[1-CopiesAvailable]=s;
	BorrowDate[1-CopiesAvailable]=d;
	}
	else
		cout<<"Sorry, No Copies Available \n"; 
	return;
}// end function Borrow

void Media::Return(Student &s ){
	int r = 2; // number of rows in the array
	int rm1=r-1;//new varible to stop the loop befor the last entry in the array

for (int i=0; i<r; i++){
		if ( Borrower[i].getID() == s.getID() && Borrower[i].getID()!=0){
			
			for ( int k=i; k<rm1; k++ ){// shifting loop
				Borrower[k]=Borrower[k+1];
				BorrowDate[k]=BorrowDate[k+1];
			}// end shifting loop
			// set the value of the last entries of all the arrays = null
			Student emptyStu;
			Date emptyDate;
			Borrower[rm1] = emptyStu;
			BorrowDate[rm1]= emptyDate;

			CopiesAvailable++;
			s.Decrement();
		}
		else
		cout<<"Does not exist \n";
	return; // if there is no name matches the search key
	}// end loop
}// end function Return

void Media::PrintInfo( ){
	for( int j=0; j < NoOfCopies-CopiesAvailable; j++)
	{
		cout<<"Student borrowers : \n";
		Borrower[j].Print();
		cout<<"On Date : \n";
		BorrowDate[j].readDate();
	}
}// end function PrintInfo












